paths:
  /api/products/:
    get:
      summary: "Get a list of products"
      tags:
        - Products
      responses:
        "200":
          description: "Products retrieved successfully."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Products"
              example:
                - _id: "123456ABC"
                  title: "product"
                  description: "product description"
                  price: 100
                  thumbnail: "image url"
                  code: "00001"
                  stock: 20
                  category: "box"
                  status: true
        "404":
          description: Cannot get products
    post:
      summary: "Create products"
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Products"
            required:
              - title
              - description
              - price
              - thumbnail
              - code
              - stock
              - category
            example:
              title: "product"
              description: "product description"
              price: 100
              thumbnail: "image url"
              code: "00001"
              stock: 20
              category: "box"
      responses:
        "201":
          description: "Products created successfully."
        "400":
          description: "Fields incompleted or not valid"
  /api/products/{pid}:
    get:
      summary: "Get product by id"
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          example: 123456ABC
          required: true
          description: product id to search
          schema:
            type: string
      responses:
        "200":
          description: "Product retrieved successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Products"
              example:
                _id: "123456ABC"
                title: "product"
                description: "product description"
                price: 100
                thumbnail: "image url"
                code: "00001"
                stock: 20
                category: "box"
                status: true
                owner: "admin"
        "404":
          description: "Product don't found."
    put:
      summary: "Update product by id"
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Products"
            required:
              - title
              - description
              - price
              - thumbnail
              - code
              - stock
              - category
              - owner
            example:
              title: "product updated"
              description: "product description"
              price: 100
              thumbnail: "image url"
              code: "00001"
              stock: 20
              category: "box"
              owner: "admin"
      parameters:
        - name: pid
          in: path
          example: 123456ABC
          required: true
          description: product id to update
          schema:
            type: string
      responses:
        "200":
          description: "Product updated successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Products"
              example:
                _id: "123456ABC"
                title: "product updated"
                description: "product description"
                price: 100
                thumbnail: "image url"
                code: "00001"
                stock: 20
                category: "box"
                owner: "admin"
        "400":
          description: "Fields incompleted or not valid"
        "404":
          description: "Product don't found."
    delete:
      summary: "Delete product by id"
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          example: 123456ABC
          description: product id to delete
          schema:
            type: string
      responses:
        "200":
          description: "Product deleted successfully."
        "404":
          description: "Product don't found."

components:
  schemas:
    Products:
      type: object
      properties:
        _id:
          type: string
          description: Id generated by MongoDB
        title:
          type: string
          description: The title of the product
        description:
          type: string
          description: A description of the product
        price:
          type: number
          description: The price of the product
        thumbnail:
          type: string
          description: URL or path to the product's thumbnail image
        code:
          type: string
          description: A unique code associated with the product
        stock:
          type: integer
          description: The available stock quantity of the product
        category:
          type: string
          description: The category to which the product belongs
        status:
          type: boolean
          default: true
          description: The status of the product (default is true for active)
      required:
        - title
        - description
        - price
        - thumbnail
        - code
        - stock
        - category
