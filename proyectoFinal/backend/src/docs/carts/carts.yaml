paths:
  /api/carts/:
    get:
      summary: "Get a list of carts"
      tags:
        - Carts
      responses:
        "200":
          description: "Carts successfully obtained from the database."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Carts"
        "404":
          description: "Cannot create cart"
    post:
      summary: "Create carts"
      tags:
        - Carts
      responses:
        "201":
          description: "Cart created successfully."
        "404":
          description: "Cannot create cart."          
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Carts"
              example:
                products: []
                _id: "id generated by mongo"
  /api/carts/{cid}:
    get:
      summary: "Get cart"
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: cart id to search
          schema:
            $type: string
      responses:
        "200":
          description: "Cart successfully obtained from the database."
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Carts"
              example:
                products: []
                _id: "id generated by mongo"
        "404":
          description: "Cart don't found."
    put:
      summary: "Update cart"
      tags:
        - Carts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/schemas/Carts"
            required:
              - products
            example:
              products:
                  title: "Product updated in cart"
      parameters:
        - name: cid
          in: path
          required: true
          description: cart id to update
          schema:
            $type: string
      responses:
        "200":
          description: "Cart updated successfully."
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Carts"
              example:
                products:
                  - title: "Product updated in cart"
        "404":
          description: "Cart don't found."
    post:
      summary: "Purchase cart"
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: cart id to purchase
          schema:
            $type: string
      responses:
        "200":
          description: "Products in cart purchased successfully."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Carts"
              example:
                  _id: "cart id"
                  products: "product purchased id"
                  quantity: "quantity of product purchased"
                  ticket: "Ticket with purchase data"
        "404":
          description: "Cart don't found."
        "400":
          description: "Products for purchase are empty"  
    delete:
      summary: "Delete cart"
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: cart id to delete
          schema:
            $type: string
      responses:
        "200":
          description: "Cart deleted successfully."
        "404":
          description: "Cart don't found."
  /api/carts/{cid}/products/{pid}:
    put:
      summary: "Update quantity products in cart"
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: cart id to update
          schema:
            $type: string
        - name: pid
          in: path
          required: true
          description: product id to update
          schema:
            $type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Carts"   
            required:
            - quantity
            example:
             quantity: 10     
      responses:
        "200":
          description: "Product quantity in cart updated successfully."  
        "404":
          description: "Cart don't found."
    post:
      summary: "Add products in user cart"
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: cart user id
          schema:
            $type: string
        - name: pid
          in: path
          required: true
          description: product id to add
          schema:
            $type: string
      responses:
        "200":
          description: "Product added on cart successfully."
        "404":
          description: "Cart don't found."
    delete:
      summary: "Delete products in user cart"
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: cart user id
          schema:
            $type: string
        - name: pid
          in: path
          required: true
          description: product id to delete
          schema:
            $type: string
      responses:
        "200":
          description: "Product deleted on cart successfully."
        "404":
          description: "Cart don't found."
  /api/carts/empty/{cid}:
    put:
      summary: "Empty products on cart"
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: cart id to empty
          schema:
            $type: string
      responses:
        "200":
          description: "Products removed from cart successfully."
        "404":
          description: "Cart don't found."

components:
  schemas:
    Carts:
      type: object
      properties:
        _id:
          type: string
          description: Id generated by MongoDB
        products:
          type: array
          description: List of products in the cart
          items:
            type: object
            properties:
              product:
                type: string
                description: Id of the product in the cart
              quantity:
                type: number
                default: 1
                description: Quantity of the product in the cart (default is 1)
      required:
        - products
      example:
        _id: ObjectId(789012XYZ)
        products:
          - product: ObjectId(123456ABC)
            quantity: 2
          - product: ObjectId(789DEF456)
            quantity: 1
